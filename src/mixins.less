.photon-border(@mx:1, @ma:0) {
	border-radius: ((extract(@cornerLevels,1) * @mx) + @ma) ((extract(@cornerLevels,2) * @mx) + @ma) ((extract(@cornerLevels,4) * @mx) + @ma) ((extract(@cornerLevels,3) * @mx) + @ma);
}

.photon-button-raised(@color,@text) {
	color: @text!important;
	background: @color!important;
	&:hover {
		background: darken(@color,6%)!important;
	}

	.waves-ripple {
		background: fade(@text,40%)!important;
	}

	box-shadow: 0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12);
	&:active {
		box-shadow: 0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12);
	}
}

.photon-button-flat(@color) {
	color: @color!important;
	background: transparent!important;
	&:hover {
		background: fade(@color,12%)!important;
	}

	.waves-ripple {
		background: fade(@color,40%)!important;
	}
}

.photon-button-outlined(@color) {
	color: @color!important;
	background: transparent!important;
	&:hover {
		background: fade(@color,12%)!important;
	}

	.waves-ripple {
		background: fade(@color,40%)!important;
	}
	box-shadow: inset 0 0 0 1px fade(@color,54%);
	&:active {
		box-shadow: inset 0 0 0 1px @color;
	}
}

.photon-checkbox(@color,@text) {
	input[type="checkbox"]:not(.switch) {
		&:checked {
			border-color: @color;
		}
		&::after {
			color:@text;
		}
	}
	input:checked ~ .ripple .waves-ripple {
		background:fade(@color,40%);
	}
}

.photon-input(@color) {
	.bar {
		background: @color;
		border-color: @color;
	}
	input:focus ~ label {
		color: @color;
	}
	input {
		caret-color: @color;
	}
}

.photon-note(@color,@icon,@title){
	border-color: @color;
	a {
		color: @color;
	}
	code {
		color: @color;
		border-color: @color!important;
		background: fade(@color,20%);
	}
	.header {
		border-color: fade(@color,20%);
		background: fade(@color,10%);
		&::before {
			content: @icon;
			color: @color;
		}
		&::after {
			content: @title;
		}
	}
	hr {
		border-color: fade(@color,20%)!important;
	}
}

.photon-radio(@color) {
	input[type="radio"]:not(.switch) {
		&:checked {
			border-color: @color;
		}
		&::after {
			background:@color;
		}
	}
	input:checked ~ .ripple .waves-ripple {
		background:fade(@color,40%);
	}
}

.photon-slider(@color) {
	.slider {
		.determinate,
		.thumb {
			background: @color!important;
		}
		.ripple .waves-ripple {
			background: fade(@color, 40%)!important;
		}
	}
}

.photon-switch(@color) {
	input[type="checkbox"].switch:checked {
		background: fade(@color,50%);
		&::before {
			background: @color;
		}
	}
	input:checked ~ .ripple .waves-ripple {
		background: fade(@color,40%);
	}
}

.transition {
	transition: all 200ms cubic-bezier(.25,.8,.25,1);
}
